<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NHibernate.Burrow.TestUtil</name>
    </assembly>
    <members>
        <member name="T:NHibernate.Burrow.TestUtil.Attributes.DataProvider">
            <summary>
            a persistant field attribute that indicates that the field will be persisted by UserControlBase
            </summary>
        </member>
        <member name="M:NHibernate.Burrow.TestUtil.DataProviderBase.ClearData">
            <summary>
            Delete the test data in a FIFO fashion
            </summary>
        </member>
        <member name="T:NHibernate.Burrow.TestUtil.RandomStringGenerator">
            <summary>
            This class can generate random passwords, which do not include ambiguous 
            characters, such as I, l, and 1. The generated password will be made of
            7-bit ASCII symbols. Every four characters will include one lower case
            character, one upper case character, one number, and one special symbol
            (such as '%') in a random order. The password will always start with an
            alpha-numeric character; it will not start with a special symbol (we do
            this because some back-end systems do not like certain special
            characters in the first position).
            </summary>
        </member>
        <member name="M:NHibernate.Burrow.TestUtil.RandomStringGenerator.GenerateLetterStrings(System.Int32)">
            <summary>
            Generate a random string consisted of letters
            </summary>
            <param name="length">length of the string generated</param>
            <returns></returns>
        </member>
        <member name="M:NHibernate.Burrow.TestUtil.RandomStringGenerator.RandomInt">
            <summary>
             Generate a random Int
            </summary>
            <returns></returns>
        </member>
        <member name="M:NHibernate.Burrow.TestUtil.RandomStringGenerator.Generate">
            <summary>
            Generates a random password.
            </summary>
            <returns>
            Randomly generated password.
            </returns>
            <remarks>
            The length of the generated password will be determined at
            random. It will be no shorter than the minimum default and
            no longer than maximum default.
            </remarks>
        </member>
        <member name="M:NHibernate.Burrow.TestUtil.RandomStringGenerator.Generate(System.Int32)">
            <summary>
            Generates a random password of the exact length.
            </summary>
            <param name="length">
            Exact password length.
            </param>
            <returns>
            Randomly generated password.
            </returns>
        </member>
        <member name="M:NHibernate.Burrow.TestUtil.RandomStringGenerator.Generate(System.Int32,System.Int32)">
            <summary>
            Generates a random password.
            </summary>
            <param name="minLength">
            Minimum password length.
            </param>
            <param name="maxLength">
            Maximum password length.
            </param>
            <returns>
            Randomly generated password.
            </returns>
            <remarks>
            The length of the generated password will be determined at
            random and it will fall with the range determined by the
            function parameters.
            </remarks>
        </member>
        <member name="M:NHibernate.Burrow.TestUtil.TestBase.TearDown">
            <summary>
            override to add TearDown logic
            </summary>
        </member>
        <member name="M:NHibernate.Burrow.TestUtil.TestBase.SetUp">
            <summary>
            override to add SetUp logic
            </summary>
        </member>
    </members>
</doc>
