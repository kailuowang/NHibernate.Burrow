<?xml version="1.0" ?>
<project name="NHibernate.Burrow.TestWeb.UnitTest" default="build" xmlns="http://nant.sf.net/release/0.85-rc3/nant.xsd">
	<property name="root.dir" value="../.." /> 
	<property name="testWeb.bin.dir" value="${root.dir}/src/NHibernate.Burrow.TestWeb/Bin" />
	<property name="testWebUnitTest.bin.dir" value="${root.dir}/src/NHibernate.Burrow.TestWeb.UnitTest/bin" />
	<include buildfile="${root.dir}/build-common/common-project.xml" />
	<target name="init" depends="common.init">
		<property name="assembly.description" value="The Unit Tests for NHibernate.Burrow." />
		<property name="assembly.is-cls-compliant" value="false" />
		<property name="clover.instrument" value="false" />
		<assemblyfileset id="project.references" basedir="${bin.dir}">
			<include name="System.dll" />
			<include name="System.Transactions.dll" />
			<include name="System.Configuration.dll" />
			<include name="System.XML.dll" />
			<include name="System.Data.dll" />
			<include name="Iesi.Collections.dll" />
			<include name="log4net.dll" /> 
			<include name="NHibernate.dll" />
			<include name="NHibernate.Burrow.dll" />
			<include name="NHibernate.Burrow.AppBlock.dll" />
			<include name="NHibernate.Burrow.TestUtil.dll" />
			<include name="NHibernate.Test.dll" />
			<include name="Castle.DynamicProxy2.dll" />
			<include name="Castle.Core.dll" />
			<include name="nunit.framework.dll" />
			<include name="Interop.SHDocVw.dll" />
			<include name="WatiN.Core.dll" />
		</assemblyfileset>
		<resourcefileset id="project.resources" prefix="NHibernate.Burrow.TestWeb.UnitTest" dynamicprefix="true">

		</resourcefileset>
	</target>
	<target name="generate-assemblyinfo" depends="init common.generate-assemblyinfo" />
	
	<target name="copy-referenced-assemblies-to-website">
		<!-- Copy framework-neutral libraries -->
		<copy todir="${testWeb.bin.dir}" >
			<fileset basedir="${bin.dir}">
				<include name="*.dll" /> 
			</fileset>
		</copy>
	</target>
	<target name="copy-referenced-assemblies-to-unitTestBin">
		<!-- Copy framework-neutral libraries -->
		<copy todir="${testWebUnitTest.bin.dir}" >
			<fileset basedir="${bin.dir}">
				<include name="Interop.SHDocVw.dll" /> 
				<include name="nunit.*.dll" /> 
				<include name="WatiN.Core.dll" /> 
			</fileset>
		</copy>
	</target>
	<target name="cleanTestWebUnitTest"   description="Deletes current Test Web">
		<delete dir="${testWebUnitTest.bin.dir}" failonerror="false" /> 
	</target>
	<target name="cleanTestWeb"   description="Deletes current UnitTest Web Bin Dlls"> 
	 
		<delete  failonerror="false">
			<fileset>
				<include name="${testWeb.bin.dir}/*.dll" />
				<include name="${testWeb.bin.dir}/*.pdb" />
			</fileset>
		</delete>
	</target>
	<target name="copy-referenced-assemblies" depends="cleanTestWeb cleanTestWebUnitTest copy-referenced-assemblies-to-unitTestBin copy-referenced-assemblies-to-website" />
	<target name="build" depends="init generate-assemblyinfo  copy-referenced-assemblies testWebUnitTest.compile-tests ">

    
	</target>
	<target name="test" depends="init build testWebUnitTest.run-tests" /> 
	
	<target name="testWebUnitTest.compile-tests" 
		description="Compile NUnit tests and copy App.config file to the output directory, if it exists.">

		<csc 
			target="library"
			define="${current.build.defines}"
			debug="${build.debug}"
			output="${testWebUnitTest.bin.dir}/${project::get-name()}.dll"
		>
			<sources refid="project.sources" />
			<references refid="project.references" />
			<resources refid="project.resources" />
		</csc>

		<copy 
			file="App.config"
			tofile="${testWebUnitTest.bin.dir}/${project::get-name()}.dll.config"
			if="${file::exists('App.config')}"
		/>
	</target>

       <target name="testWebUnitTest.run-tests"
		description="Run NUnit tests" >

		<nunit2>
			<formatter 
				type="Xml" 
				usefile="true" 
				extension=".xml" 
				outputdir="${testWebUnitTest.bin.dir}"
			/>
			<test
				assemblyname="${testWebUnitTest.bin.dir}/${project::get-name()}.dll"
				appconfig="${testWebUnitTest.bin.dir}/${project::get-name()}.dll.config" />
		</nunit2>

	</target>
</project>
